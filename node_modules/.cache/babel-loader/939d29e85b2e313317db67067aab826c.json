{"ast":null,"code":"var _jsxFileName = \"/Users/ferni/Ferni/fernando-10-08-21/src/components/orderFeed/OrderFeed.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo } from \"react\";\nimport { UsdDenomination, Product } from \"../../types\";\nimport styles from \"./OrderFeed.module.css\";\nimport { groupAndTotalOrders } from \"../../utils/utils\";\nimport { useOrderFeed } from \"../../hooks/useOrderFeed\";\nimport BidsTable from \"../orderTable/BidsTable\";\nimport AsksTable from \"../orderTable/AsksTable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function OrderFeed({\n  grouping = UsdDenomination.FiftyCents,\n  productFeedSubscription = Product.XBTUSD\n}) {\n  _s();\n\n  const {\n    bids,\n    asks\n  } = useOrderFeed({\n    productFeedSubscription\n  });\n  const bidsWithTotals = useMemo(() => groupAndTotalOrders(bids, grouping, true), [bids, grouping]);\n  const asksWithTotals = useMemo(() => groupAndTotalOrders(asks, grouping), [asks, grouping]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.tables,\n    children: [/*#__PURE__*/_jsxDEV(BidsTable, {\n      bidsWithTotals: bidsWithTotals\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AsksTable, {\n      asksWithTotals: asksWithTotals\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(OrderFeed, \"gUBvqx7j2Bx2z+6pMqvDgEg6pUw=\", false, function () {\n  return [useOrderFeed];\n});\n\n_c = OrderFeed;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderFeed\");","map":{"version":3,"sources":["/Users/ferni/Ferni/fernando-10-08-21/src/components/orderFeed/OrderFeed.tsx"],"names":["React","useMemo","UsdDenomination","Product","styles","groupAndTotalOrders","useOrderFeed","BidsTable","AsksTable","OrderFeed","grouping","FiftyCents","productFeedSubscription","XBTUSD","bids","asks","bidsWithTotals","asksWithTotals","tables"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,SAASC,eAAT,EAA0BC,OAA1B,QAAyC,aAAzC;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,SAASC,mBAAT,QAAoC,mBAApC;AACA,SAASC,YAAT,QAA6B,0BAA7B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;AAEA,OAAO,SAASC,SAAT,CAAmB;AACxBC,EAAAA,QAAQ,GAAGR,eAAe,CAACS,UADH;AAExBC,EAAAA,uBAAuB,GAAGT,OAAO,CAACU;AAFV,CAAnB,EAGY;AAAA;;AACjB,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAiBT,YAAY,CAAC;AAClCM,IAAAA;AADkC,GAAD,CAAnC;AAIA,QAAMI,cAAc,GAAGf,OAAO,CAC5B,MAAMI,mBAAmB,CAACS,IAAD,EAAOJ,QAAP,EAAiB,IAAjB,CADG,EAE5B,CAACI,IAAD,EAAOJ,QAAP,CAF4B,CAA9B;AAKA,QAAMO,cAAc,GAAGhB,OAAO,CAC5B,MAAMI,mBAAmB,CAACU,IAAD,EAAOL,QAAP,CADG,EAE5B,CAACK,IAAD,EAAOL,QAAP,CAF4B,CAA9B;AAKA,sBACE;AAAK,IAAA,SAAS,EAAEN,MAAM,CAACc,MAAvB;AAAA,4BACE,QAAC,SAAD;AAAW,MAAA,cAAc,EAAEF;AAA3B;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,SAAD;AAAW,MAAA,cAAc,EAAEC;AAA3B;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GAxBeR,S;UAISH,Y;;;KAJTG,S","sourcesContent":["import React, { useMemo } from \"react\";\nimport { UsdDenomination, Product } from \"../../types\";\nimport styles from \"./OrderFeed.module.css\";\nimport { groupAndTotalOrders } from \"../../utils/utils\";\nimport { useOrderFeed } from \"../../hooks/useOrderFeed\";\nimport BidsTable from \"../orderTable/BidsTable\";\nimport AsksTable from \"../orderTable/AsksTable\";\n\nexport function OrderFeed({\n  grouping = UsdDenomination.FiftyCents,\n  productFeedSubscription = Product.XBTUSD,\n}: OrderFeedProps) {\n  const { bids, asks } = useOrderFeed({\n    productFeedSubscription,\n  });\n\n  const bidsWithTotals = useMemo(\n    () => groupAndTotalOrders(bids, grouping, true),\n    [bids, grouping]\n  );\n\n  const asksWithTotals = useMemo(\n    () => groupAndTotalOrders(asks, grouping),\n    [asks, grouping]\n  );\n\n  return (\n    <div className={styles.tables}>\n      <BidsTable bidsWithTotals={bidsWithTotals} />\n      <AsksTable asksWithTotals={asksWithTotals} />\n    </div>\n  );\n}\n\nexport type OrderFeedProps = {\n  grouping?: UsdDenomination;\n  productFeedSubscription?: Product;\n};\n"]},"metadata":{},"sourceType":"module"}